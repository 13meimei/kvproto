// Code generated by protoc-gen-go.
// source: errorpb.proto
// DO NOT EDIT!

/*
Package errorpb is a generated protocol buffer package.

It is generated from these files:
	errorpb.proto

It has these top-level messages:
	NotLeaderError
	RegionNotFoundError
	KeyNotInRegion
	ErrorDetail
	Error
*/
package errorpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import metapb "github.com/pingcap/kvproto/pkg/metapb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type NotLeaderError struct {
	RegionId         *uint64      `protobuf:"varint,1,opt,name=region_id" json:"region_id,omitempty"`
	Leader           *metapb.Peer `protobuf:"bytes,2,opt,name=leader" json:"leader,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *NotLeaderError) Reset()                    { *m = NotLeaderError{} }
func (m *NotLeaderError) String() string            { return proto.CompactTextString(m) }
func (*NotLeaderError) ProtoMessage()               {}
func (*NotLeaderError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NotLeaderError) GetRegionId() uint64 {
	if m != nil && m.RegionId != nil {
		return *m.RegionId
	}
	return 0
}

func (m *NotLeaderError) GetLeader() *metapb.Peer {
	if m != nil {
		return m.Leader
	}
	return nil
}

type RegionNotFoundError struct {
	RegionId         *uint64 `protobuf:"varint,1,opt,name=region_id" json:"region_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RegionNotFoundError) Reset()                    { *m = RegionNotFoundError{} }
func (m *RegionNotFoundError) String() string            { return proto.CompactTextString(m) }
func (*RegionNotFoundError) ProtoMessage()               {}
func (*RegionNotFoundError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RegionNotFoundError) GetRegionId() uint64 {
	if m != nil && m.RegionId != nil {
		return *m.RegionId
	}
	return 0
}

type KeyNotInRegion struct {
	Key              []byte  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	RegionId         *uint64 `protobuf:"varint,2,opt,name=region_id" json:"region_id,omitempty"`
	StartKey         []byte  `protobuf:"bytes,3,opt,name=start_key" json:"start_key,omitempty"`
	EndKey           []byte  `protobuf:"bytes,4,opt,name=end_key" json:"end_key,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *KeyNotInRegion) Reset()                    { *m = KeyNotInRegion{} }
func (m *KeyNotInRegion) String() string            { return proto.CompactTextString(m) }
func (*KeyNotInRegion) ProtoMessage()               {}
func (*KeyNotInRegion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *KeyNotInRegion) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyNotInRegion) GetRegionId() uint64 {
	if m != nil && m.RegionId != nil {
		return *m.RegionId
	}
	return 0
}

func (m *KeyNotInRegion) GetStartKey() []byte {
	if m != nil {
		return m.StartKey
	}
	return nil
}

func (m *KeyNotInRegion) GetEndKey() []byte {
	if m != nil {
		return m.EndKey
	}
	return nil
}

type ErrorDetail struct {
	NotLeader        *NotLeaderError      `protobuf:"bytes,1,opt,name=not_leader" json:"not_leader,omitempty"`
	RegionNotFound   *RegionNotFoundError `protobuf:"bytes,2,opt,name=region_not_found" json:"region_not_found,omitempty"`
	KeyNotInRegion   *KeyNotInRegion      `protobuf:"bytes,3,opt,name=key_not_in_region" json:"key_not_in_region,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ErrorDetail) Reset()                    { *m = ErrorDetail{} }
func (m *ErrorDetail) String() string            { return proto.CompactTextString(m) }
func (*ErrorDetail) ProtoMessage()               {}
func (*ErrorDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ErrorDetail) GetNotLeader() *NotLeaderError {
	if m != nil {
		return m.NotLeader
	}
	return nil
}

func (m *ErrorDetail) GetRegionNotFound() *RegionNotFoundError {
	if m != nil {
		return m.RegionNotFound
	}
	return nil
}

func (m *ErrorDetail) GetKeyNotInRegion() *KeyNotInRegion {
	if m != nil {
		return m.KeyNotInRegion
	}
	return nil
}

type Error struct {
	Message          *string      `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Detail           *ErrorDetail `protobuf:"bytes,2,opt,name=detail" json:"detail,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Error) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *Error) GetDetail() *ErrorDetail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func init() {
	proto.RegisterType((*NotLeaderError)(nil), "errorpb.NotLeaderError")
	proto.RegisterType((*RegionNotFoundError)(nil), "errorpb.RegionNotFoundError")
	proto.RegisterType((*KeyNotInRegion)(nil), "errorpb.KeyNotInRegion")
	proto.RegisterType((*ErrorDetail)(nil), "errorpb.ErrorDetail")
	proto.RegisterType((*Error)(nil), "errorpb.Error")
}

var fileDescriptor0 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x90, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0xc6, 0xd9, 0xb6, 0xb6, 0x74, 0x76, 0xad, 0x36, 0x0a, 0x16, 0xe9, 0x41, 0x82, 0x87, 0x82,
	0xb0, 0x87, 0x1e, 0x3c, 0x0a, 0x82, 0x0a, 0xa2, 0x88, 0x88, 0xf7, 0x25, 0x92, 0xb1, 0x04, 0xdb,
	0xa4, 0xcc, 0xc6, 0x43, 0x5f, 0xc8, 0xe7, 0x34, 0x99, 0x4d, 0x4b, 0x2b, 0xf6, 0x98, 0xd9, 0xef,
	0xcf, 0xef, 0x5b, 0x38, 0x44, 0x22, 0x47, 0xcb, 0x8f, 0x72, 0x49, 0xce, 0x3b, 0xd1, 0x4b, 0xcf,
	0xf3, 0x62, 0x81, 0x5e, 0xad, 0xcf, 0xf2, 0x16, 0x06, 0x2f, 0xce, 0x3f, 0xa3, 0xd2, 0x48, 0xf7,
	0x51, 0x21, 0x86, 0xd0, 0x27, 0x9c, 0x19, 0x67, 0x2b, 0xa3, 0x47, 0xd9, 0x45, 0x36, 0xe9, 0x88,
	0x31, 0x74, 0xe7, 0xac, 0x18, 0xb5, 0xc2, 0x3b, 0x9f, 0x16, 0x65, 0xca, 0x78, 0x45, 0x24, 0x39,
	0x81, 0x93, 0x37, 0x36, 0x84, 0xa0, 0x07, 0xf7, 0x6d, 0xf5, 0xbe, 0x1c, 0xf9, 0x0e, 0x83, 0x27,
	0x5c, 0x05, 0xd9, 0xa3, 0x6d, 0x1c, 0x22, 0x87, 0xf6, 0x17, 0xae, 0xf8, 0x73, 0xb1, 0xeb, 0x68,
	0x71, 0x73, 0x38, 0xd5, 0x5e, 0x91, 0xaf, 0xa2, 0xaa, 0xcd, 0xaa, 0x23, 0xe8, 0xa1, 0xd5, 0x7c,
	0xe8, 0xc4, 0x83, 0xfc, 0xc9, 0x20, 0xe7, 0xca, 0xbb, 0x00, 0x65, 0xe6, 0xe2, 0x0a, 0xc0, 0x3a,
	0x5f, 0x25, 0xe2, 0x8c, 0x89, 0xcf, 0xca, 0xf5, 0xdf, 0xf8, 0xb3, 0xf6, 0x1a, 0x8e, 0x53, 0x67,
	0xf4, 0x7c, 0x46, 0xfc, 0x34, 0x72, 0xbc, 0xb1, 0xfc, 0xb7, 0x6e, 0x0a, 0xc3, 0x40, 0xc0, 0x26,
	0x63, 0xab, 0x26, 0x82, 0x01, 0xb7, 0xbb, 0x76, 0xc7, 0xca, 0x1b, 0x38, 0x68, 0xcc, 0x61, 0xc2,
	0x02, 0xeb, 0x5a, 0xcd, 0x90, 0xf1, 0xfa, 0xe2, 0x12, 0xba, 0x9a, 0xe1, 0x53, 0xf7, 0xe9, 0x26,
	0x62, 0x6b, 0xd8, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x5f, 0x53, 0x4c, 0xd2, 0x01, 0x00,
	0x00,
}
