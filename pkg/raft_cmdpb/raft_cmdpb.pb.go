// Code generated by protoc-gen-go.
// source: raft_cmdpb.proto
// DO NOT EDIT!

/*
Package raft_cmdpb is a generated protocol buffer package.

It is generated from these files:
	raft_cmdpb.proto

It has these top-level messages:
	GetRequest
	GetResponse
	SeekRequest
	SeekResponse
	PutRequest
	PutResponse
	DeleteRequest
	DeleteResponse
	Request
	Response
	ChangePeerRequest
	ChangePeerResponse
	SplitRequest
	SplitResponse
	CompactLogRequest
	CompactLogResponse
	AdminRequest
	AdminResponse
	RegionLeaderRequest
	RegionLeaderResponse
	StatusRequest
	StatusResponse
	RaftRequestHeader
	RaftResponseHeader
	RaftCommandRequest
	RaftCommandResponse
*/
package raft_cmdpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import metapb "github.com/pingcap/kvproto/pkg/metapb"
import errorpb "github.com/pingcap/kvproto/pkg/errorpb"
import raftpb "github.com/pingcap/kvproto/pkg/raftpb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type CommandType int32

const (
	CommandType_Invalid CommandType = 0
	CommandType_Get     CommandType = 1
	CommandType_Seek    CommandType = 2
	CommandType_Put     CommandType = 3
	CommandType_Delete  CommandType = 4
)

var CommandType_name = map[int32]string{
	0: "Invalid",
	1: "Get",
	2: "Seek",
	3: "Put",
	4: "Delete",
}
var CommandType_value = map[string]int32{
	"Invalid": 0,
	"Get":     1,
	"Seek":    2,
	"Put":     3,
	"Delete":  4,
}

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}
func (x CommandType) String() string {
	return proto.EnumName(CommandType_name, int32(x))
}
func (x *CommandType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommandType_value, data, "CommandType")
	if err != nil {
		return err
	}
	*x = CommandType(value)
	return nil
}
func (CommandType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AdminCommandType int32

const (
	AdminCommandType_InvalidAdmin AdminCommandType = 0
	AdminCommandType_ChangePeer   AdminCommandType = 1
	AdminCommandType_Split        AdminCommandType = 2
	AdminCommandType_CompactLog   AdminCommandType = 3
)

var AdminCommandType_name = map[int32]string{
	0: "InvalidAdmin",
	1: "ChangePeer",
	2: "Split",
	3: "CompactLog",
}
var AdminCommandType_value = map[string]int32{
	"InvalidAdmin": 0,
	"ChangePeer":   1,
	"Split":        2,
	"CompactLog":   3,
}

func (x AdminCommandType) Enum() *AdminCommandType {
	p := new(AdminCommandType)
	*p = x
	return p
}
func (x AdminCommandType) String() string {
	return proto.EnumName(AdminCommandType_name, int32(x))
}
func (x *AdminCommandType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdminCommandType_value, data, "AdminCommandType")
	if err != nil {
		return err
	}
	*x = AdminCommandType(value)
	return nil
}
func (AdminCommandType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type StatusCommandType int32

const (
	StatusCommandType_InvalidStatus StatusCommandType = 0
	StatusCommandType_RegionLeader  StatusCommandType = 1
)

var StatusCommandType_name = map[int32]string{
	0: "InvalidStatus",
	1: "RegionLeader",
}
var StatusCommandType_value = map[string]int32{
	"InvalidStatus": 0,
	"RegionLeader":  1,
}

func (x StatusCommandType) Enum() *StatusCommandType {
	p := new(StatusCommandType)
	*p = x
	return p
}
func (x StatusCommandType) String() string {
	return proto.EnumName(StatusCommandType_name, int32(x))
}
func (x *StatusCommandType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StatusCommandType_value, data, "StatusCommandType")
	if err != nil {
		return err
	}
	*x = StatusCommandType(value)
	return nil
}
func (StatusCommandType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GetRequest struct {
	Key              []byte `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type GetResponse struct {
	Value            []byte `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type SeekRequest struct {
	Key              []byte `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SeekRequest) Reset()                    { *m = SeekRequest{} }
func (m *SeekRequest) String() string            { return proto.CompactTextString(m) }
func (*SeekRequest) ProtoMessage()               {}
func (*SeekRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SeekRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type SeekResponse struct {
	Key              []byte `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            []byte `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SeekResponse) Reset()                    { *m = SeekResponse{} }
func (m *SeekResponse) String() string            { return proto.CompactTextString(m) }
func (*SeekResponse) ProtoMessage()               {}
func (*SeekResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SeekResponse) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *SeekResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type PutRequest struct {
	Key              []byte `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            []byte `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PutRequest) Reset()                    { *m = PutRequest{} }
func (m *PutRequest) String() string            { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()               {}
func (*PutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PutRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PutRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type PutResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *PutResponse) Reset()                    { *m = PutResponse{} }
func (m *PutResponse) String() string            { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()               {}
func (*PutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type DeleteRequest struct {
	Key              []byte `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type DeleteResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type Request struct {
	CmdType          *CommandType   `protobuf:"varint,1,opt,name=cmd_type,enum=raft_cmdpb.CommandType" json:"cmd_type,omitempty"`
	Get              *GetRequest    `protobuf:"bytes,2,opt,name=get" json:"get,omitempty"`
	Seek             *SeekRequest   `protobuf:"bytes,3,opt,name=seek" json:"seek,omitempty"`
	Put              *PutRequest    `protobuf:"bytes,4,opt,name=put" json:"put,omitempty"`
	Delete           *DeleteRequest `protobuf:"bytes,5,opt,name=delete" json:"delete,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Request) GetCmdType() CommandType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return CommandType_Invalid
}

func (m *Request) GetGet() *GetRequest {
	if m != nil {
		return m.Get
	}
	return nil
}

func (m *Request) GetSeek() *SeekRequest {
	if m != nil {
		return m.Seek
	}
	return nil
}

func (m *Request) GetPut() *PutRequest {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *Request) GetDelete() *DeleteRequest {
	if m != nil {
		return m.Delete
	}
	return nil
}

type Response struct {
	CmdType          *CommandType    `protobuf:"varint,1,opt,name=cmd_type,enum=raft_cmdpb.CommandType" json:"cmd_type,omitempty"`
	Get              *GetResponse    `protobuf:"bytes,2,opt,name=get" json:"get,omitempty"`
	Seek             *SeekResponse   `protobuf:"bytes,3,opt,name=seek" json:"seek,omitempty"`
	Put              *PutResponse    `protobuf:"bytes,4,opt,name=put" json:"put,omitempty"`
	Delete           *DeleteResponse `protobuf:"bytes,5,opt,name=delete" json:"delete,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Response) GetCmdType() CommandType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return CommandType_Invalid
}

func (m *Response) GetGet() *GetResponse {
	if m != nil {
		return m.Get
	}
	return nil
}

func (m *Response) GetSeek() *SeekResponse {
	if m != nil {
		return m.Seek
	}
	return nil
}

func (m *Response) GetPut() *PutResponse {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *Response) GetDelete() *DeleteResponse {
	if m != nil {
		return m.Delete
	}
	return nil
}

type ChangePeerRequest struct {
	ChangeType       *raftpb.ConfChangeType `protobuf:"varint,1,opt,name=change_type,enum=raftpb.ConfChangeType" json:"change_type,omitempty"`
	Peer             *metapb.Peer           `protobuf:"bytes,2,opt,name=peer" json:"peer,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ChangePeerRequest) Reset()                    { *m = ChangePeerRequest{} }
func (m *ChangePeerRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangePeerRequest) ProtoMessage()               {}
func (*ChangePeerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ChangePeerRequest) GetChangeType() raftpb.ConfChangeType {
	if m != nil && m.ChangeType != nil {
		return *m.ChangeType
	}
	return raftpb.ConfChangeType_AddNode
}

func (m *ChangePeerRequest) GetPeer() *metapb.Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type ChangePeerResponse struct {
	Region           *metapb.Region `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ChangePeerResponse) Reset()                    { *m = ChangePeerResponse{} }
func (m *ChangePeerResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangePeerResponse) ProtoMessage()               {}
func (*ChangePeerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ChangePeerResponse) GetRegion() *metapb.Region {
	if m != nil {
		return m.Region
	}
	return nil
}

type SplitRequest struct {
	// The split_key must be in the been splitting region.
	// If the split_key is none, we will choose a proper key
	// to split the region in half.
	SplitKey []byte `protobuf:"bytes,1,opt,name=split_key" json:"split_key,omitempty"`
	// We split the region into two, first uses the origin
	// parent region id, and the second uses the new_region_id.
	// We must guarantee that the new_region_id is global unique.
	NewRegionId *uint64 `protobuf:"varint,2,opt,name=new_region_id" json:"new_region_id,omitempty"`
	// The peer ids for the new split region.
	NewPeerIds       []uint64 `protobuf:"varint,3,rep,name=new_peer_ids" json:"new_peer_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SplitRequest) Reset()                    { *m = SplitRequest{} }
func (m *SplitRequest) String() string            { return proto.CompactTextString(m) }
func (*SplitRequest) ProtoMessage()               {}
func (*SplitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SplitRequest) GetSplitKey() []byte {
	if m != nil {
		return m.SplitKey
	}
	return nil
}

func (m *SplitRequest) GetNewRegionId() uint64 {
	if m != nil && m.NewRegionId != nil {
		return *m.NewRegionId
	}
	return 0
}

func (m *SplitRequest) GetNewPeerIds() []uint64 {
	if m != nil {
		return m.NewPeerIds
	}
	return nil
}

type SplitResponse struct {
	Left             *metapb.Region `protobuf:"bytes,1,opt,name=left" json:"left,omitempty"`
	Right            *metapb.Region `protobuf:"bytes,2,opt,name=right" json:"right,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SplitResponse) Reset()                    { *m = SplitResponse{} }
func (m *SplitResponse) String() string            { return proto.CompactTextString(m) }
func (*SplitResponse) ProtoMessage()               {}
func (*SplitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *SplitResponse) GetLeft() *metapb.Region {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *SplitResponse) GetRight() *metapb.Region {
	if m != nil {
		return m.Right
	}
	return nil
}

type CompactLogRequest struct {
	CompactIndex     *uint64 `protobuf:"varint,1,opt,name=compact_index" json:"compact_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CompactLogRequest) Reset()                    { *m = CompactLogRequest{} }
func (m *CompactLogRequest) String() string            { return proto.CompactTextString(m) }
func (*CompactLogRequest) ProtoMessage()               {}
func (*CompactLogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CompactLogRequest) GetCompactIndex() uint64 {
	if m != nil && m.CompactIndex != nil {
		return *m.CompactIndex
	}
	return 0
}

type CompactLogResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CompactLogResponse) Reset()                    { *m = CompactLogResponse{} }
func (m *CompactLogResponse) String() string            { return proto.CompactTextString(m) }
func (*CompactLogResponse) ProtoMessage()               {}
func (*CompactLogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type AdminRequest struct {
	CmdType          *AdminCommandType  `protobuf:"varint,1,opt,name=cmd_type,enum=raft_cmdpb.AdminCommandType" json:"cmd_type,omitempty"`
	ChangePeer       *ChangePeerRequest `protobuf:"bytes,2,opt,name=change_peer" json:"change_peer,omitempty"`
	Split            *SplitRequest      `protobuf:"bytes,3,opt,name=split" json:"split,omitempty"`
	CompactLog       *CompactLogRequest `protobuf:"bytes,4,opt,name=compact_log" json:"compact_log,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *AdminRequest) Reset()                    { *m = AdminRequest{} }
func (m *AdminRequest) String() string            { return proto.CompactTextString(m) }
func (*AdminRequest) ProtoMessage()               {}
func (*AdminRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *AdminRequest) GetCmdType() AdminCommandType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return AdminCommandType_InvalidAdmin
}

func (m *AdminRequest) GetChangePeer() *ChangePeerRequest {
	if m != nil {
		return m.ChangePeer
	}
	return nil
}

func (m *AdminRequest) GetSplit() *SplitRequest {
	if m != nil {
		return m.Split
	}
	return nil
}

func (m *AdminRequest) GetCompactLog() *CompactLogRequest {
	if m != nil {
		return m.CompactLog
	}
	return nil
}

type AdminResponse struct {
	CmdType          *AdminCommandType   `protobuf:"varint,1,opt,name=cmd_type,enum=raft_cmdpb.AdminCommandType" json:"cmd_type,omitempty"`
	ChangePeer       *ChangePeerResponse `protobuf:"bytes,2,opt,name=change_peer" json:"change_peer,omitempty"`
	Split            *SplitResponse      `protobuf:"bytes,3,opt,name=split" json:"split,omitempty"`
	CompactLog       *CompactLogResponse `protobuf:"bytes,4,opt,name=compact_log" json:"compact_log,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AdminResponse) Reset()                    { *m = AdminResponse{} }
func (m *AdminResponse) String() string            { return proto.CompactTextString(m) }
func (*AdminResponse) ProtoMessage()               {}
func (*AdminResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *AdminResponse) GetCmdType() AdminCommandType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return AdminCommandType_InvalidAdmin
}

func (m *AdminResponse) GetChangePeer() *ChangePeerResponse {
	if m != nil {
		return m.ChangePeer
	}
	return nil
}

func (m *AdminResponse) GetSplit() *SplitResponse {
	if m != nil {
		return m.Split
	}
	return nil
}

func (m *AdminResponse) GetCompactLog() *CompactLogResponse {
	if m != nil {
		return m.CompactLog
	}
	return nil
}

type RegionLeaderRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegionLeaderRequest) Reset()                    { *m = RegionLeaderRequest{} }
func (m *RegionLeaderRequest) String() string            { return proto.CompactTextString(m) }
func (*RegionLeaderRequest) ProtoMessage()               {}
func (*RegionLeaderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type RegionLeaderResponse struct {
	Leader           *metapb.Peer `protobuf:"bytes,1,opt,name=leader" json:"leader,omitempty"`
	CurrentTerm      *uint64      `protobuf:"varint,2,opt,name=current_term" json:"current_term,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RegionLeaderResponse) Reset()                    { *m = RegionLeaderResponse{} }
func (m *RegionLeaderResponse) String() string            { return proto.CompactTextString(m) }
func (*RegionLeaderResponse) ProtoMessage()               {}
func (*RegionLeaderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *RegionLeaderResponse) GetLeader() *metapb.Peer {
	if m != nil {
		return m.Leader
	}
	return nil
}

func (m *RegionLeaderResponse) GetCurrentTerm() uint64 {
	if m != nil && m.CurrentTerm != nil {
		return *m.CurrentTerm
	}
	return 0
}

type StatusRequest struct {
	CmdType          *StatusCommandType   `protobuf:"varint,1,opt,name=cmd_type,enum=raft_cmdpb.StatusCommandType" json:"cmd_type,omitempty"`
	RegionLeader     *RegionLeaderRequest `protobuf:"bytes,2,opt,name=region_leader" json:"region_leader,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *StatusRequest) Reset()                    { *m = StatusRequest{} }
func (m *StatusRequest) String() string            { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()               {}
func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *StatusRequest) GetCmdType() StatusCommandType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return StatusCommandType_InvalidStatus
}

func (m *StatusRequest) GetRegionLeader() *RegionLeaderRequest {
	if m != nil {
		return m.RegionLeader
	}
	return nil
}

type StatusResponse struct {
	CmdType          *StatusCommandType    `protobuf:"varint,1,opt,name=cmd_type,enum=raft_cmdpb.StatusCommandType" json:"cmd_type,omitempty"`
	RegionLeader     *RegionLeaderResponse `protobuf:"bytes,2,opt,name=region_leader" json:"region_leader,omitempty"`
	CurrentTerm      *uint64               `protobuf:"varint,3,opt,name=current_term" json:"current_term,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *StatusResponse) Reset()                    { *m = StatusResponse{} }
func (m *StatusResponse) String() string            { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()               {}
func (*StatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *StatusResponse) GetCmdType() StatusCommandType {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return StatusCommandType_InvalidStatus
}

func (m *StatusResponse) GetRegionLeader() *RegionLeaderResponse {
	if m != nil {
		return m.RegionLeader
	}
	return nil
}

func (m *StatusResponse) GetCurrentTerm() uint64 {
	if m != nil && m.CurrentTerm != nil {
		return *m.CurrentTerm
	}
	return 0
}

type RaftRequestHeader struct {
	RegionId *uint64      `protobuf:"varint,1,opt,name=region_id" json:"region_id,omitempty"`
	Peer     *metapb.Peer `protobuf:"bytes,2,opt,name=peer" json:"peer,omitempty"`
	// true for read linearization
	ReadQuorum *bool `protobuf:"varint,3,opt,name=read_quorum" json:"read_quorum,omitempty"`
	// 16 bytes, to distinguish request.
	Uuid             []byte `protobuf:"bytes,4,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RaftRequestHeader) Reset()                    { *m = RaftRequestHeader{} }
func (m *RaftRequestHeader) String() string            { return proto.CompactTextString(m) }
func (*RaftRequestHeader) ProtoMessage()               {}
func (*RaftRequestHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *RaftRequestHeader) GetRegionId() uint64 {
	if m != nil && m.RegionId != nil {
		return *m.RegionId
	}
	return 0
}

func (m *RaftRequestHeader) GetPeer() *metapb.Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *RaftRequestHeader) GetReadQuorum() bool {
	if m != nil && m.ReadQuorum != nil {
		return *m.ReadQuorum
	}
	return false
}

func (m *RaftRequestHeader) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type RaftResponseHeader struct {
	Error            *errorpb.Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Uuid             []byte         `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RaftResponseHeader) Reset()                    { *m = RaftResponseHeader{} }
func (m *RaftResponseHeader) String() string            { return proto.CompactTextString(m) }
func (*RaftResponseHeader) ProtoMessage()               {}
func (*RaftResponseHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *RaftResponseHeader) GetError() *errorpb.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RaftResponseHeader) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type RaftCommandRequest struct {
	Header *RaftRequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	// We can't enclose normal requests and administrator request
	// at same time.
	Requests         []*Request     `protobuf:"bytes,2,rep,name=requests" json:"requests,omitempty"`
	AdminRequest     *AdminRequest  `protobuf:"bytes,3,opt,name=admin_request" json:"admin_request,omitempty"`
	StatusRequest    *StatusRequest `protobuf:"bytes,4,opt,name=status_request" json:"status_request,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RaftCommandRequest) Reset()                    { *m = RaftCommandRequest{} }
func (m *RaftCommandRequest) String() string            { return proto.CompactTextString(m) }
func (*RaftCommandRequest) ProtoMessage()               {}
func (*RaftCommandRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *RaftCommandRequest) GetHeader() *RaftRequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RaftCommandRequest) GetRequests() []*Request {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *RaftCommandRequest) GetAdminRequest() *AdminRequest {
	if m != nil {
		return m.AdminRequest
	}
	return nil
}

func (m *RaftCommandRequest) GetStatusRequest() *StatusRequest {
	if m != nil {
		return m.StatusRequest
	}
	return nil
}

type RaftCommandResponse struct {
	Header           *RaftResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Responses        []*Response         `protobuf:"bytes,2,rep,name=responses" json:"responses,omitempty"`
	AdminResponse    *AdminResponse      `protobuf:"bytes,3,opt,name=admin_response" json:"admin_response,omitempty"`
	StatusResponse   *StatusResponse     `protobuf:"bytes,4,opt,name=status_response" json:"status_response,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *RaftCommandResponse) Reset()                    { *m = RaftCommandResponse{} }
func (m *RaftCommandResponse) String() string            { return proto.CompactTextString(m) }
func (*RaftCommandResponse) ProtoMessage()               {}
func (*RaftCommandResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *RaftCommandResponse) GetHeader() *RaftResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RaftCommandResponse) GetResponses() []*Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *RaftCommandResponse) GetAdminResponse() *AdminResponse {
	if m != nil {
		return m.AdminResponse
	}
	return nil
}

func (m *RaftCommandResponse) GetStatusResponse() *StatusResponse {
	if m != nil {
		return m.StatusResponse
	}
	return nil
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "raft_cmdpb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "raft_cmdpb.GetResponse")
	proto.RegisterType((*SeekRequest)(nil), "raft_cmdpb.SeekRequest")
	proto.RegisterType((*SeekResponse)(nil), "raft_cmdpb.SeekResponse")
	proto.RegisterType((*PutRequest)(nil), "raft_cmdpb.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "raft_cmdpb.PutResponse")
	proto.RegisterType((*DeleteRequest)(nil), "raft_cmdpb.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "raft_cmdpb.DeleteResponse")
	proto.RegisterType((*Request)(nil), "raft_cmdpb.Request")
	proto.RegisterType((*Response)(nil), "raft_cmdpb.Response")
	proto.RegisterType((*ChangePeerRequest)(nil), "raft_cmdpb.ChangePeerRequest")
	proto.RegisterType((*ChangePeerResponse)(nil), "raft_cmdpb.ChangePeerResponse")
	proto.RegisterType((*SplitRequest)(nil), "raft_cmdpb.SplitRequest")
	proto.RegisterType((*SplitResponse)(nil), "raft_cmdpb.SplitResponse")
	proto.RegisterType((*CompactLogRequest)(nil), "raft_cmdpb.CompactLogRequest")
	proto.RegisterType((*CompactLogResponse)(nil), "raft_cmdpb.CompactLogResponse")
	proto.RegisterType((*AdminRequest)(nil), "raft_cmdpb.AdminRequest")
	proto.RegisterType((*AdminResponse)(nil), "raft_cmdpb.AdminResponse")
	proto.RegisterType((*RegionLeaderRequest)(nil), "raft_cmdpb.RegionLeaderRequest")
	proto.RegisterType((*RegionLeaderResponse)(nil), "raft_cmdpb.RegionLeaderResponse")
	proto.RegisterType((*StatusRequest)(nil), "raft_cmdpb.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "raft_cmdpb.StatusResponse")
	proto.RegisterType((*RaftRequestHeader)(nil), "raft_cmdpb.RaftRequestHeader")
	proto.RegisterType((*RaftResponseHeader)(nil), "raft_cmdpb.RaftResponseHeader")
	proto.RegisterType((*RaftCommandRequest)(nil), "raft_cmdpb.RaftCommandRequest")
	proto.RegisterType((*RaftCommandResponse)(nil), "raft_cmdpb.RaftCommandResponse")
	proto.RegisterEnum("raft_cmdpb.CommandType", CommandType_name, CommandType_value)
	proto.RegisterEnum("raft_cmdpb.AdminCommandType", AdminCommandType_name, AdminCommandType_value)
	proto.RegisterEnum("raft_cmdpb.StatusCommandType", StatusCommandType_name, StatusCommandType_value)
}

var fileDescriptor0 = []byte{
	// 929 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x56, 0xdd, 0x6e, 0xeb, 0x44,
	0x10, 0xc6, 0xc7, 0x4e, 0x9a, 0x33, 0xb6, 0x83, 0xe3, 0xe6, 0xd0, 0x34, 0x6a, 0x43, 0x65, 0x5a,
	0x9a, 0x06, 0x11, 0x44, 0x8a, 0x80, 0xdb, 0x52, 0x10, 0x3f, 0xaa, 0xa0, 0x2a, 0x5c, 0x22, 0x59,
	0x26, 0xde, 0xa6, 0x51, 0x13, 0xdb, 0xf5, 0x0f, 0xb4, 0x6f, 0xc1, 0x93, 0x01, 0x12, 0x82, 0xe7,
	0x61, 0xbd, 0x3b, 0xeb, 0xec, 0xc6, 0x2e, 0x52, 0xaf, 0x22, 0xcf, 0xce, 0x7c, 0x33, 0xdf, 0x37,
	0x33, 0xbb, 0x01, 0x27, 0x0d, 0x6e, 0x73, 0x7f, 0xbe, 0x0e, 0x93, 0x5f, 0xa6, 0x49, 0x1a, 0xe7,
	0xb1, 0x0b, 0x1b, 0xcb, 0xd0, 0x5a, 0x93, 0x3c, 0x10, 0x27, 0x43, 0x9b, 0xa4, 0x69, 0x9c, 0x56,
	0x9f, 0x56, 0xe9, 0x28, 0xbe, 0xbc, 0x7d, 0x80, 0xaf, 0x49, 0x7e, 0x43, 0x1e, 0x0a, 0x92, 0xe5,
	0xae, 0x09, 0xfa, 0x3d, 0x79, 0x1a, 0x68, 0x47, 0xda, 0xd8, 0xf2, 0x0e, 0xc0, 0x64, 0x47, 0x59,
	0x12, 0x47, 0x19, 0x71, 0x6d, 0x68, 0xfd, 0x1a, 0xac, 0x0a, 0x82, 0xa7, 0x43, 0x30, 0x7f, 0x24,
	0xe4, 0xbe, 0x31, 0x72, 0x02, 0x16, 0x3f, 0xc3, 0x50, 0xf9, 0x70, 0x83, 0xf3, 0x8a, 0xf9, 0x8e,
	0x01, 0xae, 0x8b, 0xc6, 0x02, 0xb6, 0x3d, 0x6d, 0x30, 0x99, 0x27, 0x07, 0xa5, 0xe5, 0xd9, 0x5f,
	0x92, 0x15, 0xc9, 0x49, 0x63, 0x09, 0x0e, 0x74, 0xc5, 0x29, 0xfa, 0xff, 0xa5, 0xc1, 0x8e, 0x70,
	0x3d, 0x83, 0x0e, 0x55, 0xca, 0xcf, 0x9f, 0x12, 0x4e, 0xa7, 0x3b, 0xdb, 0x9b, 0x4a, 0x8a, 0x5e,
	0xc6, 0xeb, 0x75, 0x10, 0x85, 0x3f, 0xd1, 0x63, 0xf7, 0x3d, 0xd0, 0x17, 0x24, 0x67, 0x25, 0x98,
	0xb3, 0x77, 0x64, 0x2f, 0x49, 0xb7, 0x13, 0x30, 0x32, 0x4a, 0x78, 0xa0, 0x33, 0x2f, 0x05, 0x4b,
	0x16, 0x89, 0x62, 0x25, 0x45, 0x3e, 0x30, 0xea, 0x58, 0x92, 0x04, 0x67, 0xd0, 0x0e, 0x59, 0xe5,
	0x83, 0x16, 0xf3, 0xdb, 0x97, 0xfd, 0x14, 0xc6, 0xde, 0x3f, 0x1a, 0x74, 0x2a, 0x91, 0x5f, 0xc0,
	0xe9, 0x58, 0xe6, 0xb4, 0x57, 0xe3, 0x84, 0x80, 0xef, 0x2b, 0xa4, 0x06, 0x75, 0x52, 0xe8, 0x77,
	0x2c, 0xb3, 0xda, 0xab, 0xb1, 0x42, 0xaf, 0xc9, 0x16, 0xad, 0x61, 0x13, 0x2d, 0x6c, 0xd5, 0xcf,
	0xd0, 0xbb, 0xbc, 0x0b, 0xa2, 0x05, 0xb9, 0x26, 0x24, 0x15, 0xba, 0x7c, 0x00, 0xe6, 0x9c, 0x19,
	0x65, 0x8a, 0x5c, 0x44, 0x46, 0x2f, 0xba, 0xe5, 0x31, 0x8c, 0xe1, 0x10, 0x8c, 0x84, 0xc6, 0x22,
	0x45, 0x6b, 0x8a, 0x0b, 0x51, 0xe2, 0x79, 0x9f, 0x80, 0x2b, 0xa3, 0x63, 0x7d, 0x23, 0x68, 0xa7,
	0x64, 0xb1, 0x8c, 0x23, 0x86, 0x6c, 0xce, 0xba, 0x22, 0xe6, 0x86, 0x59, 0xbd, 0xef, 0xe9, 0x4c,
	0x27, 0xab, 0x65, 0xd5, 0xa6, 0x1e, 0xbc, 0xce, 0xca, 0x6f, 0x7f, 0x33, 0xaf, 0x6f, 0xc0, 0x8e,
	0xc8, 0x6f, 0x3e, 0x87, 0xf1, 0x97, 0x21, 0xcb, 0x6e, 0xb8, 0x7d, 0xb0, 0x4a, 0x73, 0x59, 0x0f,
	0x35, 0x66, 0x54, 0x4f, 0x7d, 0x6c, 0x78, 0x57, 0x60, 0x23, 0x1e, 0x16, 0x70, 0x00, 0xc6, 0x8a,
	0xdc, 0xe6, 0xcd, 0xe9, 0xdd, 0x43, 0x68, 0xa5, 0xcb, 0xc5, 0x9d, 0x68, 0xda, 0x76, 0x75, 0x13,
	0xaa, 0x58, 0xbc, 0x4e, 0x82, 0x79, 0x7e, 0x15, 0x2f, 0x44, 0x89, 0xb4, 0x9e, 0x39, 0x37, 0xfa,
	0xcb, 0x28, 0x24, 0x8f, 0x0c, 0xda, 0xf0, 0xfa, 0x94, 0xbf, 0xe4, 0x8b, 0x9a, 0xff, 0xa9, 0x81,
	0x75, 0x11, 0xae, 0x97, 0x91, 0x88, 0x9e, 0xd6, 0xe6, 0xe9, 0x40, 0x6e, 0x19, 0xf3, 0x95, 0x87,
	0x6a, 0x56, 0xf5, 0x47, 0x52, 0xfe, 0x50, 0x19, 0xc1, 0x5a, 0x4f, 0x4f, 0xa1, 0xc5, 0x44, 0x6c,
	0x9c, 0x31, 0x59, 0xed, 0x12, 0x1c, 0xa9, 0xac, 0xe2, 0x05, 0xce, 0xda, 0xe1, 0xd6, 0x7c, 0xab,
	0xf4, 0xbd, 0xbf, 0x35, 0xb0, 0x91, 0x11, 0x4a, 0xfc, 0x52, 0x4a, 0xe7, 0x4d, 0x94, 0x46, 0xcf,
	0x51, 0xc2, 0x24, 0x63, 0x95, 0xd3, 0x7e, 0x03, 0x27, 0xf4, 0x3c, 0x6f, 0x22, 0x35, 0x7a, 0x8e,
	0x14, 0xf6, 0xe9, 0x0d, 0xec, 0xf2, 0x9e, 0x5f, 0x91, 0x20, 0xac, 0x94, 0xf4, 0xbe, 0x83, 0xbe,
	0x6a, 0xae, 0xa6, 0xaa, 0xbd, 0x62, 0x16, 0x9c, 0x2b, 0x65, 0x15, 0xca, 0xd1, 0x9c, 0x17, 0x69,
	0x4a, 0xa2, 0xdc, 0xcf, 0x49, 0xba, 0xe6, 0x03, 0xeb, 0x3d, 0xd2, 0xd1, 0xcc, 0x83, 0xbc, 0xc8,
	0x84, 0xfa, 0x1f, 0xd5, 0x74, 0x53, 0xa4, 0xe7, 0xce, 0xb2, 0x70, 0x9f, 0x82, 0x8d, 0x5b, 0x80,
	0xc9, 0xb9, 0x74, 0xef, 0xca, 0x51, 0x4d, 0x2c, 0x7e, 0xd7, 0xa0, 0x2b, 0x52, 0x23, 0x81, 0x17,
	0xe7, 0xfe, 0xac, 0x39, 0xf7, 0xd1, 0xf3, 0xb9, 0x31, 0xd3, 0xb6, 0x18, 0x3a, 0x13, 0x83, 0x40,
	0xef, 0x86, 0x06, 0x62, 0x85, 0xdf, 0xb0, 0x90, 0x72, 0xf9, 0x37, 0x5b, 0xce, 0xb6, 0xea, 0xff,
	0x6e, 0x1c, 0x77, 0x17, 0xcc, 0x94, 0x06, 0xfa, 0x0f, 0x45, 0x9c, 0x16, 0x1c, 0xb8, 0xe3, 0x5a,
	0x60, 0x14, 0x05, 0x0d, 0x37, 0xd8, 0x7b, 0x75, 0x01, 0x2e, 0x4f, 0xc3, 0x8b, 0xc1, 0x3c, 0x74,
	0xeb, 0xd9, 0xe3, 0x5d, 0x5d, 0x0a, 0xe2, 0x29, 0xff, 0xaa, 0xfc, 0xad, 0x20, 0xf8, 0xfb, 0xf8,
	0x87, 0xc6, 0x31, 0x50, 0x0c, 0xd1, 0xbc, 0x0f, 0xa1, 0x7d, 0x27, 0x4f, 0x80, 0x22, 0x5f, 0x9d,
	0xda, 0x09, 0x74, 0x52, 0x6e, 0xc8, 0x28, 0xae, 0x4e, 0x03, 0x76, 0x55, 0xe5, 0xc4, 0x48, 0xd8,
	0x41, 0xb9, 0x2e, 0x3e, 0x3a, 0x37, 0x6d, 0xb0, 0x72, 0x9d, 0x7c, 0x0c, 0xdd, 0x8c, 0xf5, 0xaa,
	0x8a, 0x30, 0x1a, 0xf6, 0x43, 0x1e, 0x3b, 0xef, 0x5f, 0x8d, 0xce, 0xba, 0x4c, 0xa8, 0x5a, 0x63,
	0x95, 0xd1, 0xa8, 0xce, 0x48, 0x51, 0xf1, 0xb4, 0xec, 0x16, 0xb7, 0x08, 0x4e, 0x7d, 0x95, 0x13,
	0x02, 0xd3, 0x1a, 0x05, 0x29, 0x6e, 0x69, 0xda, 0x61, 0xf5, 0x4a, 0x39, 0x87, 0xb7, 0x2b, 0x5a,
	0x18, 0x63, 0xd4, 0xdf, 0x37, 0x75, 0xa6, 0x27, 0x5f, 0x80, 0x29, 0x4f, 0xac, 0x09, 0x3b, 0xdf,
	0x46, 0xf4, 0x9f, 0xce, 0x32, 0x74, 0xde, 0x72, 0x77, 0x40, 0xa7, 0x8f, 0xb0, 0xa3, 0xb9, 0x1d,
	0x30, 0xca, 0x67, 0xd6, 0x79, 0x55, 0x9a, 0xe8, 0x4b, 0xea, 0xe8, 0x2e, 0x40, 0x9b, 0xbf, 0x94,
	0x8e, 0x31, 0xf9, 0x01, 0x9c, 0xda, 0x7d, 0xe5, 0x80, 0x85, 0x40, 0xec, 0x88, 0xa2, 0x75, 0x01,
	0x36, 0x57, 0x14, 0x05, 0x7d, 0x0d, 0x2d, 0x76, 0x07, 0x51, 0xd4, 0xf2, 0xa8, 0xba, 0x5e, 0x1c,
	0x7d, 0xf2, 0x39, 0xf4, 0xea, 0xcb, 0xd4, 0x03, 0x1b, 0x11, 0xf9, 0x19, 0x85, 0xa4, 0x49, 0xe4,
	0xf5, 0x71, 0xb4, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x55, 0x29, 0x1b, 0xb0, 0x8d, 0x0a, 0x00,
	0x00,
}
