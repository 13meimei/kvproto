// Code generated by protoc-gen-go.
// source: pd_jobpb.proto
// DO NOT EDIT!

/*
Package pd_jobpd is a generated protocol buffer package.

It is generated from these files:
	pd_jobpb.proto

It has these top-level messages:
	Job
*/
package pd_jobpd

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import raft_cmdpb "github.com/pingcap/kvproto/pkg/raft_cmdpb"
import metapb "github.com/pingcap/kvproto/pkg/metapb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type JobStatus int32

const (
	// When pd server inserts the job into job queue, the job status is pending.
	JobStatus_Pending JobStatus = 0
	// When pd server gets the first job and before handling, it must first change
	// the job's status to running. If the job is running, we should check whether
	// the job is already finished in raft server.
	JobStatus_Running  JobStatus = 1
	JobStatus_Finished JobStatus = 2
	JobStatus_Canceled JobStatus = 3
)

var JobStatus_name = map[int32]string{
	0: "Pending",
	1: "Running",
	2: "Finished",
	3: "Canceled",
}
var JobStatus_value = map[string]int32{
	"Pending":  0,
	"Running":  1,
	"Finished": 2,
	"Canceled": 3,
}

func (x JobStatus) Enum() *JobStatus {
	p := new(JobStatus)
	*p = x
	return p
}
func (x JobStatus) String() string {
	return proto.EnumName(JobStatus_name, int32(x))
}
func (x *JobStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(JobStatus_value, data, "JobStatus")
	if err != nil {
		return err
	}
	*x = JobStatus(value)
	return nil
}
func (JobStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// For each conf change, split operation, we will add this into job queue,
// and in another thread, it will get first job, handle it, and then pop in cycle.
type Job struct {
	JobId            *uint64                        `protobuf:"varint,1,opt,name=job_id" json:"job_id,omitempty"`
	Status           *JobStatus                     `protobuf:"varint,2,opt,name=status,enum=pd_jobpd.JobStatus" json:"status,omitempty"`
	Region           *metapb.Region                 `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
	Request          *raft_cmdpb.RaftCommandRequest `protobuf:"bytes,4,opt,name=request" json:"request,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Job) GetJobId() uint64 {
	if m != nil && m.JobId != nil {
		return *m.JobId
	}
	return 0
}

func (m *Job) GetStatus() JobStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return JobStatus_Pending
}

func (m *Job) GetRegion() *metapb.Region {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *Job) GetRequest() *raft_cmdpb.RaftCommandRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func init() {
	proto.RegisterType((*Job)(nil), "pd_jobpd.Job")
	proto.RegisterEnum("pd_jobpd.JobStatus", JobStatus_name, JobStatus_value)
}

var fileDescriptor0 = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x8e, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xcd, 0x76, 0xe9, 0xae, 0xb3, 0x4b, 0x28, 0xf1, 0x12, 0xf6, 0xb0, 0x88, 0x5e, 0xc4,
	0x43, 0x84, 0x7d, 0x03, 0x59, 0xf0, 0xe0, 0x49, 0xe2, 0x03, 0x94, 0xb4, 0x89, 0x35, 0x62, 0x26,
	0x35, 0x49, 0x9f, 0xc2, 0x97, 0x36, 0xad, 0x2d, 0x7a, 0x9b, 0x6f, 0xfe, 0x6f, 0x7e, 0x06, 0x68,
	0xaf, 0xeb, 0x0f, 0xdf, 0xf4, 0x8d, 0xe8, 0x83, 0x4f, 0x9e, 0x6d, 0x67, 0xd6, 0x87, 0x2a, 0xa8,
	0xb7, 0x54, 0xb7, 0x4e, 0x2f, 0xd9, 0x61, 0xef, 0x4c, 0x52, 0x0b, 0xdd, 0x7c, 0x13, 0x28, 0x9e,
	0x7d, 0xc3, 0x28, 0x94, 0xf9, 0xa0, 0xb6, 0x9a, 0x93, 0x6b, 0x72, 0xb7, 0x66, 0xb7, 0x50, 0xc6,
	0xa4, 0xd2, 0x10, 0xf9, 0x2a, 0x33, 0x3d, 0x5d, 0x89, 0xa5, 0x52, 0x64, 0xfd, 0x75, 0x8a, 0xd8,
	0x11, 0xca, 0x60, 0x3a, 0xeb, 0x91, 0x17, 0x59, 0xda, 0x9d, 0xa8, 0x98, 0xbb, 0xe5, 0xb4, 0x65,
	0x0f, 0xb0, 0x09, 0xe6, 0x6b, 0x30, 0x31, 0xf1, 0xf5, 0x24, 0x1c, 0xc5, 0xbf, 0x77, 0x64, 0x1e,
	0xcf, 0xde, 0x39, 0x85, 0x5a, 0xfe, 0x5a, 0xf7, 0x8f, 0x70, 0xf9, 0xd7, 0xbe, 0x83, 0xcd, 0x8b,
	0x41, 0x6d, 0xb1, 0xab, 0x2e, 0x46, 0x90, 0x03, 0xe2, 0x08, 0x84, 0xed, 0x61, 0xfb, 0x64, 0xd1,
	0xc6, 0x77, 0xa3, 0xab, 0xd5, 0x48, 0x67, 0x85, 0xad, 0xf9, 0xcc, 0x54, 0xfc, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x48, 0x5f, 0x53, 0x6e, 0x0b, 0x01, 0x00, 0x00,
}
