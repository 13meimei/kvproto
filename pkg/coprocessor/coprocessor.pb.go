// Code generated by protoc-gen-go.
// source: coprocessor.proto
// DO NOT EDIT!

/*
Package coprocessor is a generated protocol buffer package.

It is generated from these files:
	coprocessor.proto

It has these top-level messages:
	Request
	Result
	Response
*/
package coprocessor

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import errorpb "github.com/pingcap/kvproto/pkg/errorpb"
import kvrpcpb "github.com/pingcap/kvproto/pkg/kvrpcpb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type ResultType int32

const (
	ResultType_Ok             ResultType = 1
	ResultType_Locked         ResultType = 2
	ResultType_NotLeader      ResultType = 3
	ResultType_RegionNotFound ResultType = 4
	ResultType_KeyNotInRegion ResultType = 5
	ResultType_Other          ResultType = 6
)

var ResultType_name = map[int32]string{
	1: "Ok",
	2: "Locked",
	3: "NotLeader",
	4: "RegionNotFound",
	5: "KeyNotInRegion",
	6: "Other",
}
var ResultType_value = map[string]int32{
	"Ok":             1,
	"Locked":         2,
	"NotLeader":      3,
	"RegionNotFound": 4,
	"KeyNotInRegion": 5,
	"Other":          6,
}

func (x ResultType) Enum() *ResultType {
	p := new(ResultType)
	*p = x
	return p
}
func (x ResultType) String() string {
	return proto.EnumName(ResultType_name, int32(x))
}
func (x *ResultType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResultType_value, data, "ResultType")
	if err != nil {
		return err
	}
	*x = ResultType(value)
	return nil
}
func (ResultType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Request struct {
	Context          *kvrpcpb.Context `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Tp               *int64           `protobuf:"varint,2,opt,name=tp" json:"tp,omitempty"`
	Data             []byte           `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	StartKey         []byte           `protobuf:"bytes,4,opt,name=start_key" json:"start_key,omitempty"`
	EndKey           []byte           `protobuf:"bytes,5,opt,name=end_key" json:"end_key,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetContext() *kvrpcpb.Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Request) GetTp() int64 {
	if m != nil && m.Tp != nil {
		return *m.Tp
	}
	return 0
}

func (m *Request) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Request) GetStartKey() []byte {
	if m != nil {
		return m.StartKey
	}
	return nil
}

func (m *Request) GetEndKey() []byte {
	if m != nil {
		return m.EndKey
	}
	return nil
}

type Result struct {
	Type             *ResultType             `protobuf:"varint,1,opt,name=type,enum=coprocessor.ResultType" json:"type,omitempty"`
	Msg              *string                 `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	LockInfo         *kvrpcpb.LockInfo       `protobuf:"bytes,3,opt,name=lock_info" json:"lock_info,omitempty"`
	LeaderInfo       *errorpb.NotLeader      `protobuf:"bytes,4,opt,name=leader_info" json:"leader_info,omitempty"`
	RegionNotFound   *errorpb.RegionNotFound `protobuf:"bytes,5,opt,name=region_not_found" json:"region_not_found,omitempty"`
	NotInRegion      *errorpb.KeyNotInRegion `protobuf:"bytes,6,opt,name=not_in_region" json:"not_in_region,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Result) GetType() ResultType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ResultType_Ok
}

func (m *Result) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *Result) GetLockInfo() *kvrpcpb.LockInfo {
	if m != nil {
		return m.LockInfo
	}
	return nil
}

func (m *Result) GetLeaderInfo() *errorpb.NotLeader {
	if m != nil {
		return m.LeaderInfo
	}
	return nil
}

func (m *Result) GetRegionNotFound() *errorpb.RegionNotFound {
	if m != nil {
		return m.RegionNotFound
	}
	return nil
}

func (m *Result) GetNotInRegion() *errorpb.KeyNotInRegion {
	if m != nil {
		return m.NotInRegion
	}
	return nil
}

type Response struct {
	Result           *Result `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Data             []byte  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Response) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Response) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "coprocessor.Request")
	proto.RegisterType((*Result)(nil), "coprocessor.Result")
	proto.RegisterType((*Response)(nil), "coprocessor.Response")
	proto.RegisterEnum("coprocessor.ResultType", ResultType_name, ResultType_value)
}

var fileDescriptor0 = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x4f, 0xea, 0x40,
	0x14, 0xc5, 0xd3, 0x3f, 0x94, 0xd7, 0x5b, 0xca, 0x2b, 0xf7, 0x2d, 0x5e, 0xc3, 0x4a, 0x51, 0xa3,
	0x71, 0xd1, 0x44, 0xf6, 0xae, 0x4c, 0x4c, 0x88, 0x44, 0x12, 0xe2, 0xbe, 0x29, 0xed, 0x05, 0xb1,
	0x38, 0x53, 0x67, 0x06, 0x23, 0x5f, 0xda, 0xcf, 0xe0, 0x74, 0x6a, 0x09, 0x18, 0x77, 0x9d, 0x73,
	0x7e, 0x37, 0xf7, 0x9c, 0x5b, 0x18, 0xe4, 0xbc, 0x12, 0x3c, 0x27, 0x29, 0xb9, 0x48, 0xf4, 0x97,
	0xe2, 0x18, 0x1c, 0x48, 0xc3, 0x90, 0x84, 0xe0, 0xa2, 0x5a, 0x34, 0xde, 0x30, 0x2c, 0xdf, 0x45,
	0x95, 0xb7, 0xcf, 0xd1, 0x0b, 0x74, 0xe7, 0xf4, 0xb6, 0x25, 0xa9, 0xf0, 0x14, 0xba, 0x39, 0x67,
	0x8a, 0x3e, 0x54, 0x6c, 0x9d, 0x58, 0x57, 0xc1, 0x38, 0x4a, 0x5a, 0xf6, 0xae, 0xd1, 0x11, 0xc0,
	0x56, 0x55, 0x6c, 0x6b, 0xd7, 0xc1, 0x1e, 0xb8, 0x45, 0xa6, 0xb2, 0xd8, 0xd1, 0xaf, 0x1e, 0x0e,
	0xc0, 0x97, 0x2a, 0x13, 0x2a, 0x2d, 0x69, 0x17, 0xbb, 0x46, 0xfa, 0x0b, 0x5d, 0x62, 0x85, 0x11,
	0x3a, 0xb5, 0x30, 0xfa, 0xb4, 0xc0, 0x9b, 0x93, 0xdc, 0x6e, 0x14, 0x5e, 0x80, 0xab, 0x76, 0x15,
	0x99, 0x45, 0xfd, 0xf1, 0xff, 0xe4, 0xb0, 0x43, 0x83, 0x3c, 0x69, 0x1b, 0x03, 0x70, 0x5e, 0xe5,
	0xca, 0x2c, 0xf4, 0xf1, 0x1c, 0xfc, 0x0d, 0xcf, 0xcb, 0x74, 0xcd, 0x96, 0xdc, 0x6c, 0x0d, 0xc6,
	0x83, 0x7d, 0xc2, 0xa9, 0x76, 0x26, 0xda, 0xc0, 0x4b, 0x08, 0x36, 0x94, 0x15, 0x24, 0x1a, 0xce,
	0x35, 0x1c, 0x26, 0xed, 0x11, 0x1e, 0xb9, 0x9a, 0x1a, 0x1b, 0x6f, 0x20, 0x12, 0xb4, 0x5a, 0x73,
	0x96, 0x32, 0xae, 0xd2, 0x25, 0xdf, 0xb2, 0xc2, 0xe4, 0x0c, 0x74, 0x9c, 0x96, 0x9e, 0x1b, 0x40,
	0xcf, 0xdc, 0xd7, 0x36, 0x26, 0x10, 0xd6, 0xec, 0x9a, 0xa5, 0xcd, 0x64, 0xec, 0xfd, 0xe0, 0x1f,
	0x68, 0xa7, 0xe1, 0x09, 0x6b, 0xe6, 0x46, 0xb7, 0xf0, 0x47, 0x97, 0xa9, 0x38, 0x93, 0x84, 0x67,
	0xe0, 0x09, 0x53, 0xec, 0xfb, 0xb8, 0xff, 0x7e, 0xe9, 0xbc, 0xbf, 0x69, 0x5d, 0xb8, 0x77, 0xbd,
	0x00, 0x38, 0xb8, 0x85, 0x07, 0xf6, 0xac, 0x8c, 0x2c, 0xfd, 0x0f, 0xbc, 0xba, 0x2c, 0x15, 0x91,
	0x8d, 0x21, 0xf8, 0xfb, 0x42, 0x91, 0x83, 0x08, 0xfd, 0xe3, 0xc4, 0x91, 0x5b, 0x6b, 0xc7, 0xa9,
	0xa2, 0x0e, 0xfa, 0xd0, 0x99, 0xa9, 0x67, 0x3d, 0xe2, 0x7d, 0x05, 0x00, 0x00, 0xff, 0xff, 0xaa,
	0xe3, 0x09, 0x3e, 0x3e, 0x02, 0x00, 0x00,
}
