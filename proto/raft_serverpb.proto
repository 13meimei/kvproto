syntax = "proto2";
package raft_serverpb;

import "raftpb.proto";
import "metapb.proto";
import "raft_cmdpb.proto";

// TODO: after we refactor with msgpb.MessageType, msgpb.Message, we will remove 
// MessageType and Message here later.

enum MessageType {
    None         = 0;
    Cmd          = 1;
    CmdResp      = 2;
    Raft         = 3;
}

// Message holds all messages communicating with raft server.
message Message {
    optional MessageType                 msg_type  = 1;  
    optional raft_cmdpb.RaftCmdRequest   cmd_req   = 2;
    optional raft_cmdpb.RaftCmdResponse  cmd_resp  = 3;
    optional RaftMessage                 raft      = 4;
}

message RaftMessage {
    optional uint64 region_id         	     = 1;
    optional metapb.Peer from_peer    	     = 2;
    optional metapb.Peer to_peer      	     = 3;
    optional raftpb.Message message   	     = 4;
    optional metapb.RegionEpoch region_epoch = 5;
}

message RaftTruncatedState {
    optional uint64 index    = 1;
    optional uint64 term     = 2;
}

message KeyValue {
    optional bytes key      = 1;
    optional bytes value    = 2;
}

message RaftSnapshotData {
    optional metapb.Region region   = 1;
    repeated KeyValue data          = 2;
}

message StoreIdent {
    optional uint64 cluster_id   = 1;
    optional uint64 node_id      = 2;
    optional uint64 store_id     = 3;
}
